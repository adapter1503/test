$1 Разобраться как устроены и что делают компоненты MyLogger и PDOAdapter. 
Для PDOAdapter можно не анализировать метод getColumnMetadata.


$2 Проанализировать структуру таблицы person тестовой базы данных.



$3 Написать тестовое приложение, используя компоненты MyLogger и PDOAdapter.


Параметр $dsn компонента PDOAdapter имеет подобную структуру:
$dsn = 'mysql:host=localhost;dbname=test'


Написать запросы к базе данных, результат представить в виде самой простой HTML-страницы. 
Подробно:

Используя SQL и компонент PDOAdapter:

1) Определить максимальный возраст

2) Найти любую персону, у которой mother_id не задан и возраст меньше максимального

3) изменить у нее возраст на максимальный

4) Получить список персон максимального возраста (фамилия, имя). Желательно НЕ ИСПОЛЬЗУЯ полученное на шаге 1 значение.

5) Сформировать и отобразить HTML-страницу:

Заголовок "Список персон максимального возраста (здесь значение п.1)"
Таблица, содержащая колонки: фамилия, имя, возраст.

В строках таблицы - персоны, упорядоченные по возрастанию фамилии и имени.



Поощряется использование любых НЕОДУШЕВЛЕНЫХ информационных источников.

Задание должно быть выполнено самостоятельно. 
На очном собеседовании будут дополнительные вопросы по существу выполненного задания.


UPDATE test.person t1 
JOIN test.person t2 ON t2.age = (SELECT max(age) FROM test.person)
SET t1.age = t2.age
WHERE t1.age != (SELECT max(age) FROM test.person);

UPDATE test.person
SET age = (SELECT age FROM (SELECT age FROM test.person WHERE age = (SELECT max(age) FROM test.person)) AS t2)
WHERE age != (SELECT max(age) FROM test.person);


используйте команду BEGIN TRANSACTION перед запуском запросов. Чтобы вы могли ROLLBACK вещи в любой момент времени.

ДЛЯ ПРИМЕРА:

начать транзакцию
выберите * из Студента
удалить из Студента, где Id = 2
выберите * из Студента
Откат
выберите * из Студента